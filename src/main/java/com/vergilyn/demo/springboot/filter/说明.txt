一、过滤器filter
  对于实现过滤器的2种方式：
    1. 基于servlet的，ServletFilter implements Filter，类注解@WebFilter。（javax.servlet.Filter）
	
    2. 基于spring mvc的，SpringMvcFilter extends OncePerRequestFilter，类注解@Component(或者其他bean注入方式)。（org.springframework.web.filter.OncePerRequestFilter）
	  除开OncePerRequestFilter，spring mvc中还定义了很多别的filter，参考spiring-web.jar中org.springframework.web.filter。
	  当然，它们全都implements Filter。
	 （参考：http://blog.csdn.net/ochangwen/article/details/52727743）
	 
  区别：
	1、不管用@Component注解ServletFilter或SpringMvcFilter，在application中都无需注解@ServletComponentScan，且filter正常可用。
	  但有一个问题是：怎么指定需要过滤的路径？
	  
	2、不管是implements Filter还是extends OncePerRequestFilter，只要注解为@WebFilter，那么application必须要@ServletComponentScan，
	  不然filter不会被正确的注入（即无效的filter）

 
特别：
  1. 修改请求参数数值
  	因为HttpServletRequest.getParameterMap()无法被改变，所以需要extends HttpServletRequestWrapper并重写部分方法。
  	参考： https://my.oschina.net/alexnine/blog/730706
	
  2. 过滤器、拦截器等的执行顺序
  	仔细理解：https://my.oschina.net/ydsakyclguozi/blog/413789